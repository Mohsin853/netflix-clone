{"version":3,"sources":["logo.svg","axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0db8e473.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React, {useState, useEffect} from 'react'\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl]=useState(\"\");\r\n\r\n    useEffect(() =>{ \r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, [fetchUrl]); \r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl){\r\n            setTrailerUrl('');\r\n        }else{\r\n         movieTrailer(movie?.name || \"\")\r\n            .then((url) => {\r\n             const urlParams = new URLSearchParams(new URL(url).search);\r\n             setTrailerUrl(urlParams.get(\"v\"));\r\n         })\r\n         .catch((error) => console.log(error));\r\n        }\r\n\r\n    };\r\n\r\n        return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className= \"row__posters\">\r\n                {/* several row_poster()*/}\r\n            \r\n                {movies.map(movie => (<img key={movie.id} onClick={()=> handleClick(movie)}className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}src={`${base_url}${isLargeRow ? movie.poster_path:movie.backdrop_path}`} alt={movie.name}/>) )}\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"25f5ae08965d38ba60bdea9bb2763c9f\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React, {useState, useEffect} from 'react'\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport \"./Banner.css\"\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]\r\n                );\r\n\r\n                return request;\r\n            \r\n\r\n\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    console.log(movie);\r\n\r\n    function truncate(str, n){\r\n        return str?.length>n?str.substr(0,n-1)+\"...\": str;\r\n    }\r\n    return (\r\n        <header className = \"banner\"\r\n        style= {{ \r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\"\r\n            )`,\r\n            backgroundPosition: \"center center\",\r\n\r\n\r\n        }}>\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner__description\">{truncate(movie?.overview, 150)}</h1>\r\n                \r\n        \r\n            </div>\r\n  \r\n\r\n            <div className=\"banner--fadeBottom\"/>                     \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","import React, {useState, useEffect} from 'react'\r\nimport \"./Nav.css\";\r\n\r\n\r\nfunction Nav() {\r\n\r\n    const[show, handleShow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100){\r\n                handleShow(true);\r\n\r\n            } else handleShow(false);\r\n        \r\n\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n\r\n    }, []);\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img className=\"nav__logo\"\r\n            src= \"https://www.freepnglogos.com/uploads/netflix-logo-0.png\"\r\n            alt=\"Netflix Logo\"/>\r\n\r\n        <img className=\"nav__avatar\"\r\n            src= \"https://mir-s3-cdn-cf.behance.net/project_modules/disp/84c20033850498.56ba69ac290ea.png\"\r\n            alt=\"Netflix Logo\"/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests'\nimport Banner from './Banner';\nimport Nav from \"./Nav\"\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      \n      \n      <Row title = \"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n      <Row title = \"Trending\" fetchUrl={requests.fetchTrending}/>\n      <Row title = \"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title = \"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title = \"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title = \"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title = \"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title = \"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n       \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}